(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{706:function(s,t,a){s.exports=a.p+"assets/img/算法脑图.39b9d544.jpeg"},980:function(s,t,a){"use strict";a.r(t);var n=a(41),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("img",{staticStyle:{display:"block",margin:"0 auto"},attrs:{src:a(706)}}),s._v(" "),t("h2",{attrs:{id:"_1、复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、复杂度"}},[s._v("#")]),s._v(" 1、复杂度")]),s._v(" "),t("h4",{attrs:{id:"_1-1-时间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-时间复杂度"}},[s._v("#")]),s._v(" 1.1 时间复杂度")]),s._v(" "),t("p",[s._v("  在进行算法分析时，语句总是随着执行次数 "),t("code",[s._v("T(n)")]),s._v(" 是关于问题规模 "),t("code",[s._v("n")]),s._v(" 的函数。进而分析 "),t("code",[s._v("T(n)")]),s._v("的数量随 "),t("code",[s._v("n")]),s._v(" 的变化情况并确定 "),t("code",[s._v("T(n)")]),s._v(" 的数量级。算法的时间复杂度，也就是算法的时间量度，记做 "),t("code",[s._v("T(n)=O(f(n))")]),s._v("。它表示随问题规模 "),t("code",[s._v("n")]),s._v(" 的增大，算法执行时间的增长率和 "),t("code",[s._v("f(n)")]),s._v(" 的增长率相同，称作算法的"),t("strong",[s._v("渐进时间复杂度")]),s._v("，简称为时间复杂度，是"),t("strong",[s._v("算法的执行时间与数据规模之间的增长关系")]),s._v("。其中 "),t("code",[s._v("f(n)")]),s._v(" 是问题规模 "),t("code",[s._v("n")]),s._v(" 的某个函数。")]),s._v(" "),t("h5",{attrs:{id:"_1-时间复杂度分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-时间复杂度分析"}},[s._v("#")]),s._v(" 1. 时间复杂度分析")]),s._v(" "),t("ul",[t("li",[s._v("只关注循环执行次数最多的一段代码。")]),s._v(" "),t("li",[s._v("加法法则：总复杂度等于量级最大的那段代码的复杂度。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("///cal()函数的时间复杂度是n^2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("j"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("j"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n           console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("ul",[t("li",[s._v("乘法法则:嵌套代码的复杂度等于嵌套内外代码复杂度的乘积")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//cal()函数的复杂度是n*2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h5",{attrs:{id:"_2、时间复杂度量级分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、时间复杂度量级分类"}},[s._v("#")]),s._v(" 2、时间复杂度量级分类")]),s._v(" "),t("p",[s._v("多项式量级")]),s._v(" "),t("ul",[t("li",[s._v("常数阶("),t("code",[s._v("O(1)")]),s._v(")")]),s._v(" "),t("li",[s._v("对数阶("),t("code",[s._v("O(logn)")]),s._v(")\n因为对数之间是可以互相转换的。"),t("code",[s._v("log3n=log10n/log103= log32 * log2n=(log102/log103)*(log10n/log102)")]),s._v("，所以就有"),t("code",[s._v("O(log3n)=O(C*log2n)")]),s._v(","),t("code",[s._v("C=log32")]),s._v("是一个常量。"),t("strong",[s._v("在采用大O标记复杂度的时候，可以忽略系数，即O(Cf(n)))=O(f(n))")]),s._v(',所以在对数阶时间复杂度的表示方法里,会忽略对数的"底"，统一表示为'),t("code",[s._v("O(logn)")]),s._v("。"),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//时间复杂度为O(log2n)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("////时间复杂度为O(log32n)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])])]),s._v(" "),t("li",[s._v("线性阶("),t("code",[s._v("O(n)")]),s._v(")")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//m 和 n 是表示两个数据规模。我们无法事先评估 m 和 n 谁的量级大，所以我们在表示复杂度的时候，就不能简单地利用加法法则，省略掉其中一个。所以，上面代码的时间复杂度就是 O(m+n)。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sum_1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sum_1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sum_1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sum_2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sum_2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sum_2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" sum_1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sum_2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[s._v("线性对数阶("),t("code",[s._v("O(logn)")]),s._v(")")]),s._v(" "),t("li",[s._v("平方阶("),t("code",[s._v("O(n^2)")]),s._v(")、立方阶("),t("code",[s._v("O(n^3)")]),s._v(")...k次方阶("),t("code",[s._v("O(n^k)")]),s._v(")")])]),s._v(" "),t("p",[s._v("非多项式量级")]),s._v(" "),t("ul",[t("li",[s._v("指数阶("),t("code",[s._v("O(2^n)")]),s._v(")")]),s._v(" "),t("li",[s._v("阶乘阶("),t("code",[s._v("O(n!)")]),s._v(")")])]),s._v(" "),t("h5",{attrs:{id:"_3、时间复杂度情况分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、时间复杂度情况分类"}},[s._v("#")]),s._v(" 3、时间复杂度情况分类")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// n表示数组array的长度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最好情况复杂度是O(1)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最坏情况复杂度是O(n)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  x")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" pos "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n            pos "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" pos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("ul",[t("li",[s._v("最好情况时间复杂度(极端情况的复杂度)")]),s._v(" "),t("li",[s._v("最坏情况时间复杂度(极端情况的复杂度)")]),s._v(" "),t("li",[s._v("平均情况时间复杂度(加权平均时间复杂度)")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//上面代码中x一共有n+1(在数组的0~n-1位置和不在数组中)中情况，每种情况下查找需要遍历的元素个数依次是(1,2,3....n,n),要么在数组中要么不在数组中的概率都是1/2。根据概率乘法。有以下公式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=>1/2n表示x为1的概率")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2n")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3n")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("均摊时间复杂度")])]),s._v(" "),t("h4",{attrs:{id:"_1-2-空间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-空间复杂度"}},[s._v("#")]),s._v(" 1.2 空间复杂度")]),s._v(" "),t("p",[s._v("  通过计算算法所需的存储空间实现。"),t("code",[s._v("S(n)=O(f(n))")]),s._v("，其中 "),t("code",[s._v("n")]),s._v("为问题的规模，"),t("code",[s._v("f(n)")]),s._v("为语句关于 "),t("code",[s._v("n")]),s._v(" 所占存储空间的函数。空间复杂度的全称是**渐进空间复杂度，表示算法的存储空间与数据规模之间的增长关系。**一般会在函数中以数组的形式存在。一维数组的话空间复杂度就是数组的长度 "),t("code",[s._v("（n）")]),s._v("。 二维数组的空间复杂度为 "),t("code",[s._v("n^2")]),s._v("。常见的空间复杂度就是"),t("code",[s._v("O(1)、O(n)、O(n^2)")])]),s._v(" "),t("h2",{attrs:{id:"_2、数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、数据结构"}},[s._v("#")]),s._v(" 2、数据结构")]),s._v(" "),t("h3",{attrs:{id:"_2-1、线性表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、线性表"}},[s._v("#")]),s._v(" 2.1、线性表")]),s._v(" "),t("p",[s._v("锳锳零个或多个数据元素的有限序列。")]),s._v(" "),t("h4",{attrs:{id:"_1、-线性表的顺序存储结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、-线性表的顺序存储结构"}},[s._v("#")]),s._v(" "),t("strong",[s._v("1、 线性表的顺序存储结构")])]),s._v(" "),t("p",[s._v("  用一段地址连续的存储单元依次存储线性表的数据元素。")]),s._v(" "),t("p",[t("strong",[s._v("优点")])]),s._v(" "),t("ul",[t("li",[s._v("无需为表示表中元素之间的逻辑关系而增加额外的存储空间。")]),s._v(" "),t("li",[s._v("可以快速的存取表中任意位置的元素。")])]),s._v(" "),t("p",[t("strong",[s._v("缺点")])]),s._v(" "),t("ul",[t("li",[s._v("插入和删除需要移动大量元素。")]),s._v(" "),t("li",[s._v("当线性表长度变化较大时难以确定存储空间的容量。")]),s._v(" "),t("li",[s._v("造成存储空间的碎片。")])]),s._v(" "),t("h4",{attrs:{id:"_2、线性表的链式存储结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、线性表的链式存储结构"}},[s._v("#")]),s._v(" "),t("strong",[s._v("2、线性表的链式存储结构")])]),s._v(" "),t("p",[s._v("  对数据元素来说，除了存储其本身的信息之外，还需要存储一个指示其直接后继的信息（即直接后继的存储位置）。我们把存储数据元素信息的域称为数据域，把存储"),t("strong",[s._v("直接后继位置")]),s._v("的域称为指针域。指针域中存储额信息称为指针或链这两部分信息组成结点。多个节点链接成一个链表，称为线性表的链式存储结构。")]),s._v(" "),t("h5",{attrs:{id:"_2-1、单链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、单链表"}},[s._v("#")]),s._v(" 2.1、单链表")]),s._v(" "),t("p",[s._v("  链表中的每个节点只包含一个指针域，称为单链表。链表中的"),t("strong",[s._v("第一个节点的存储位置称为头指针")]),s._v("。在单链表的第一个结点前附设一个结点，称为"),t("strong",[s._v("头结点")]),s._v("。头结点的指针域存储指向第一个结点的指针。线性链表的最后一个节点指针为"),t("strong",[s._v("空")]),s._v("（通常用"),t("code",[s._v("NULL")]),s._v("表示）")]),s._v(" "),t("p",[t("strong",[s._v("头指针")])]),s._v(" "),t("ul",[t("li",[s._v("指链表中指向第一个节点的指针。")]),s._v(" "),t("li",[s._v("头指针具有标识作用，所以常以头指针冠以链表的名字。")]),s._v(" "),t("li",[s._v("无论链表是否为空，头指针均不为空。头指针是链表的必要元素。")])]),s._v(" "),t("p",[t("strong",[s._v("头结点")])]),s._v(" "),t("ul",[t("li",[s._v("头结点是为了操作的统一和方便而设立的，放在第一元素的结点之前，其数据域一般无意义。")]),s._v(" "),t("li",[s._v("有了头结点，对在第一元素结点前插入结点和删除第一结点，其操作和其他结点的操作就统一了。")]),s._v(" "),t("li",[s._v("头结点不一定是链表必须元素。")])]),s._v(" "),t("p",[t("strong",[s._v("单链表和顺序存储结构的优缺点")])]),s._v(" "),t("blockquote",[t("p",[s._v("1、存储分配方式")])]),s._v(" "),t("ul",[t("li",[s._v("顺序存储结构用一段连续的存储单元依次存储线性表的数据元素。")]),s._v(" "),t("li",[s._v("单链表采用链式存储结构，用一组任意的存储单元存放线性表的元素。")])]),s._v(" "),t("blockquote",[t("p",[s._v("2、时间性能")])]),s._v(" "),t("ul",[t("li",[s._v("查找\n"),t("ul",[t("li",[s._v("顺序存储结构 "),t("code",[s._v("O(1)")])]),s._v(" "),t("li",[s._v("单链表 "),t("code",[s._v("O(n)")])])])]),s._v(" "),t("li",[s._v("插入和删除\n"),t("ul",[t("li",[s._v("顺序存储结构 "),t("code",[s._v("O(n)")])]),s._v(" "),t("li",[s._v("单链表 "),t("code",[s._v("O(1)")])])])])]),s._v(" "),t("blockquote",[t("p",[s._v("3、空间性能")])]),s._v(" "),t("ul",[t("li",[s._v("顺序存储结构需要预分配存储空间，空间分大了，浪费，分小了容易发生上溢。")]),s._v(" "),t("li",[s._v("单链表不需要分配存储空间，只要有就可以分配，元素个数也不受限制。数据元素可以存在内存未被占用的任意位置。")])]),s._v(" "),t("h5",{attrs:{id:"_2-2、静态链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、静态链表"}},[s._v("#")]),s._v(" 2.2、静态链表")]),s._v(" "),t("p",[s._v("  用数组描述的链表。数组的元素由两个数据域组成，"),t("code",[s._v("data")]),s._v("和"),t("code",[s._v("cur")]),s._v("。"),t("code",[s._v("data")]),s._v("用来存放数据元素，"),t("code",[s._v("cur")]),s._v("相当于单链表中的 "),t("code",[s._v("next")]),s._v(" 指针。")]),s._v(" "),t("p",[t("strong",[s._v("优点")])]),s._v(" "),t("ul",[t("li",[s._v("在插入和删除操作时，只需要移动游标，不需要移动元素，从而改进在顺序存储结构中的插入和删除操作要移动大量元素的缺点。")])]),s._v(" "),t("p",[t("strong",[s._v("缺点")])]),s._v(" "),t("ul",[t("li",[s._v("没有解决连续存储分配带来的表长难以确定的问题。")]),s._v(" "),t("li",[s._v("失去了顺序存储结构随机存取的特性。")])]),s._v(" "),t("h5",{attrs:{id:"_2-3、循环链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、循环链表"}},[s._v("#")]),s._v(" 2.3、循环链表")]),s._v(" "),t("p",[s._v("  将单向链表中终端结点的指针端由空指针改为指向头结点，就使单链表形成一个环，这种首位相连的单链表称为循环链表。")]),s._v(" "),t("h5",{attrs:{id:"_2-4、双向链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4、双向链表"}},[s._v("#")]),s._v(" 2.4、双向链表")]),s._v(" "),t("p",[s._v("  在单链表的每个节点中，再设置一个指向其前驱结点的指针。")]),s._v(" "),t("h3",{attrs:{id:"_2、栈和队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、栈和队列"}},[s._v("#")]),s._v(" 2、栈和队列")]),s._v(" "),t("h4",{attrs:{id:"_2-1-栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-栈"}},[s._v("#")]),s._v(" "),t("strong",[s._v("2.1 栈")])]),s._v(" "),t("p",[s._v("  栈是限定仅在表尾进行插入和删除操作的线性表。允许删除和插入的一端称为"),t("strong",[s._v("栈顶")]),s._v("，另一端称为"),t("strong",[s._v("栈底")]),s._v("。栈又被称为后进先出的线性表("),t("code",[s._v("Last In First Out")]),s._v("),简称"),t("code",[s._v("LIFO")]),s._v("操作。")]),s._v(" "),t("h4",{attrs:{id:"_2-2-队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-队列"}},[s._v("#")]),s._v(" "),t("strong",[s._v("2.2 队列")])]),s._v(" "),t("p",[s._v("  队列是只允许在一端进行插入操作，在另一端进行删除操作的线性表。是一种先进先出("),t("code",[s._v("First In First Out")]),s._v(")的线性表。")])])}),[],!1,null,null,null);t.default=r.exports}}]);