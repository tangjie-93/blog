(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{780:function(_,v,t){"use strict";t.r(v);var T=t(41),s=Object(T.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1、http请求方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、http请求方式"}},[_._v("#")]),_._v(" 1、HTTP请求方式？")]),_._v(" "),v("p",[v("code",[_._v("HTTP")]),_._v("协议中共定义了八种方法来表明对 "),v("code",[_._v("Request-URI")]),_._v(" 指定的资源的不同操作方式，具体介绍如下：")]),_._v(" "),v("ul",[v("li",[_._v("1、OPTIONS：返回服务器"),v("strong",[_._v("针对特定资源所支持的HTTP请求方法")]),_._v("。也可以利用向Web服务器发送'*'的请求来测试服务器的功能性。")]),_._v(" "),v("li",[_._v("2、HEAD：向服务器索要与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以在不必传输整个响应内容的情况下，就可以获取包含在响应消息头中的元信息(只获取响应头)。")]),_._v(" "),v("li",[_._v("3、GET：向特定的资源发出请求。")]),_._v(" "),v("li",[_._v("4、POST：向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的创建和/或已有资源的修改。")]),_._v(" "),v("li",[_._v("5、PUT：向指定资源位置上传其最新内容。")]),_._v(" "),v("li",[_._v("6、DELETE：请求服务器删除 Request-URI 所标识的资源。")]),_._v(" "),v("li",[_._v("7、TRACE：回显服务器收到的请求，主要用于测试或诊断。")]),_._v(" "),v("li",[_._v("8、CONNECT："),v("code",[_._v("HTTP/1.1")]),_._v(" 协议中预留给能够将连接改为管道方式的代理服务器。")])]),_._v(" "),v("h2",{attrs:{id:"_2、下面就来对比一下get和post的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、下面就来对比一下get和post的区别"}},[_._v("#")]),_._v(" 2、下面就来对比一下GET和POST的区别")]),_._v(" "),v("p",[_._v("应用过程中的区别（由于HTTP的规定和浏览器/服务器的限制）：")]),_._v(" "),v("ul",[v("li",[_._v("1、GET一般用于信息"),v("strong",[_._v("获取")]),_._v("。POST一般用于"),v("strong",[_._v("修改")]),_._v("服务器上的资源; ("),v("strong",[_._v("目的")]),_._v(")")]),_._v(" "),v("li",[_._v("2、GET使用URL传递参数(queryString)，对所发送信息的数量也有限制，一般在2000个字符，且会被浏览器保存历史纪录。POST对所发送的信息没有限制;（"),v("strong",[_._v("字数限制")]),_._v("）")]),_._v(" "),v("li",[_._v("3、GET方式需要使用Request.QueryString来取得变量的值。而POST方式通过Request.Form来获取变量的值;（"),v("strong",[_._v("后台获取数据的方式")]),_._v("）")]),_._v(" "),v("li",[_._v("4、Get是通过地址栏来传值。而Post是通过提交表单（body）来传值;  （"),v("strong",[_._v("传值方式")]),_._v("）")]),_._v(" "),v("li",[_._v("5、Get 请求能缓存。 POST不能，除非手动设置;（"),v("strong",[_._v("是否能缓存")]),_._v("）")]),_._v(" "),v("li",[_._v("6、Post 支持更多的编码类型且不对数据类型限制，GET只接受ASCII字符。 （"),v("strong",[_._v("支持的编码类型")]),_._v("）")]),_._v(" "),v("li",[_._v("7、GET在浏览器回退时是无害的，而POST会再次提交请求。 （"),v("strong",[_._v("回退操作的影响")]),_._v("）")]),_._v(" "),v("li",[_._v("8、GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。（"),v("strong",[_._v("请求参数是否会被保留")]),_._v("）")]),_._v(" "),v("li",[_._v("9、GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。（"),v("strong",[_._v("安全性")]),_._v("）")]),_._v(" "),v("li",[_._v("10、GET产生一个TCP数据包；POST产生两个TCP数据包。对于GET方式的请求，浏览器会把 "),v("code",[_._v("http header")]),_._v(" 和 "),v("code",[_._v("data")]),_._v(" 一并发送出去，服务器响应200（返回数据）；（"),v("strong",[_._v("发送数据包的个数")]),_._v("）而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。")])]),_._v(" "),v("p",[v("strong",[_._v("相同点：")]),_._v(" GET和POST本质上就是TCP链接，并无差别。")]),_._v(" "),v("p",[_._v("  然而，在以下情况中，请使用 POST 请求：")]),_._v(" "),v("ul",[v("li",[_._v("1、无法使用缓存文件（更新服务器上的文件或数据库）；")]),_._v(" "),v("li",[_._v("2、向服务器发送大量数据（POST 没有数据量限制）；")]),_._v(" "),v("li",[_._v("3、发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);