(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{799:function(v,_,e){"use strict";e.r(_);var o=e(41),t=Object(o.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h4",{attrs:{id:"_1、什么是事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是事件"}},[v._v("#")]),v._v(" 1、什么是事件？")]),v._v(" "),_("p",[v._v("事件是浏览器赋予元素的默认行为。")]),v._v(" "),_("h4",{attrs:{id:"_2、什么是事件绑定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、什么是事件绑定"}},[v._v("#")]),v._v(" 2、什么是事件绑定？")]),v._v(" "),_("p",[v._v("给元素默认的事件行为绑定方法，这样局可以在行为触发的时候，执行这个方法。")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("DOM0")]),v._v("级事件绑定 绑定的方法都是在目标阶段/冒泡阶段触发的\n"),_("strong",[v._v("语法：")]),v._v(" [元素].on[事件]=[函数]\n"),_("code",[v._v("document.body.onclick=function(){}")]),v._v(" "),_("strong",[v._v("移除绑定:")]),v._v(" 赋值为"),_("code",[v._v("null")]),v._v("或者其他非函数值皆可\n"),_("code",[v._v("document.body.onclick=null")]),v._v(" "),_("strong",[v._v("原理：")]),v._v(" 给"),_("code",[v._v("DOM")]),v._v(" 元素的私有属性("),_("code",[v._v("onxxx")]),v._v(")赋值。\n+ 如果没有对应的私有属性,则无法基于这种办法实现事件绑定。\n+ 只能给当前元素的某个事件行为绑定一个方法\n+ 执行效率块，使用起来方便")]),v._v(" "),_("li",[_("code",[v._v("DOM2")]),v._v("级事件绑定\n"),_("strong",[v._v("语法：")]),v._v(" [元素].addEvenetListener([事件],[方法],[捕获/冒泡]) 最后一个参数默认是"),_("code",[v._v("false")]),v._v('，控制方法在冒泡阶段执行。\ndocument.body.addEvenListener("click",fn,false)\n'),_("strong",[v._v("移除事件绑定：")]),v._v(" [元素].removeEvenetListener([事件],[方法],[捕获/冒泡]) 参数需要跟绑定时的一样\n"),_("code",[v._v('document.body.removeEvenListener("click",fn,false)')]),v._v(" "),_("strong",[v._v("原理：")]),v._v(" 每一个"),_("code",[v._v("DOM")]),v._v("元素都会基于"),_("code",[v._v("__proto__")]),v._v("，查找到"),_("code",[v._v("EventTarget.prototype")]),v._v("上的"),_("code",[v._v("addEventListener/removeEventListener")]),v._v("等方法，基于这些方法实现事件的移除和绑定,"),_("code",[v._v("DOM2")]),v._v("事件绑定采用事件池机制。\n+ 绑定的方法一般不是匿名函数,主要目的是方便移除事件绑定的时候使用\n+ 凡是浏览器提供的事件行为，都可以基于这种模式完成事件的绑定和移除。\n+ 可以给当前元素的某个事件类型绑定多个不同的方法。事件触发时，从事件池中取出对应的方法依次执行。")])]),v._v(" "),_("h4",{attrs:{id:"_3、事件分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、事件分类"}},[v._v("#")]),v._v(" 3、事件分类")]),v._v(" "),_("ul",[_("li",[v._v("鼠标事件\n"),_("ul",[_("li",[_("code",[v._v("click")]),v._v(" 点击事件(PC:频繁点击"),_("code",[v._v("N")]),v._v("次，触发"),_("code",[v._v("N")]),v._v("次点击事件) 单击事件(移动端:"),_("code",[v._v("300ms")]),v._v("内没有发生第二次点击操作，算作单击事件，所以"),_("code",[v._v("click")]),v._v("事件在移动端有"),_("code",[v._v("300ms")]),v._v("延迟。)")]),v._v(" "),_("li",[_("code",[v._v("dblclick")]),v._v(" 双击事件")]),v._v(" "),_("li",[_("code",[v._v("contextmenu")]),v._v(" 鼠标右键点击触发")]),v._v(" "),_("li",[_("code",[v._v("mousedown")]),v._v(" 鼠标按下")]),v._v(" "),_("li",[_("code",[v._v("mouseup")]),v._v(" 鼠标抬起")]),v._v(" "),_("li",[_("code",[v._v("mousemove")]),v._v(" 鼠标在元素内移动时持续触发")]),v._v(" "),_("li",[_("code",[v._v("mouseover")]),v._v(" 鼠标移到有事件监听的元素或者它的子元素内。")]),v._v(" "),_("li",[_("code",[v._v("mouseout")]),v._v(" 鼠标移出元素，或者移到它的子元素上。")]),v._v(" "),_("li",[_("code",[v._v("mouseenter")]),v._v(" 鼠标进入")]),v._v(" "),_("li",[_("code",[v._v("mouseleave")]),v._v(" 鼠标离开(冒泡)\n...")])])]),v._v(" "),_("li",[v._v("键盘事件\n"),_("ul",[_("li",[_("code",[v._v("keydown")])]),v._v(" "),_("li",[_("code",[v._v("keyup")])]),v._v(" "),_("li",[_("code",[v._v("keypress")]),v._v("\n...")])])]),v._v(" "),_("li",[v._v("手指事件\n["),_("code",[v._v("Touch event")]),v._v("单手指事件]\n"),_("ul",[_("li",[_("code",[v._v("touchstart")])]),v._v(" "),_("li",[_("code",[v._v("touchmove")])]),v._v(" "),_("li",[_("code",[v._v("touchend")]),v._v("\n["),_("code",[v._v("gesture event")]),v._v(" 多手指事件]")])])]),v._v(" "),_("li",[v._v("表单事件\n"),_("ul",[_("li",[_("code",[v._v("focus")]),v._v(" 获取事件")]),v._v(" "),_("li",[_("code",[v._v("blur")]),v._v(" 失去焦点")]),v._v(" "),_("li",[_("code",[v._v("submit")]),v._v(" 表单提交(提交的是表单里面的元素)")]),v._v(" "),_("li",[_("code",[v._v("reset")]),v._v(" 表单重置(重置的是表单里面的元素)")]),v._v(" "),_("li",[_("code",[v._v("select")]),v._v(" 下拉框内容改变")]),v._v(" "),_("li",[_("code",[v._v("change")]),v._v(" 内容改变")]),v._v(" "),_("li",[_("code",[v._v("input")]),v._v(" 文本框\n...")])])]),v._v(" "),_("li",[v._v("资源事件\n"),_("ul",[_("li",[_("code",[v._v("load")]),v._v(" 资源加载完成")]),v._v(" "),_("li",[_("code",[v._v("error")]),v._v(" 资源加载出错")]),v._v(" "),_("li",[_("code",[v._v("abort")]),v._v(" 资源加载中止\n...\n...")])])])]),v._v(" "),_("h4",{attrs:{id:"_4、事件对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、事件对象"}},[v._v("#")]),v._v(" 4、事件对象")]),v._v(" "),_("p",[v._v("存储当前事件操作及触发的相关信息的(浏览器本身记录的)。")]),v._v(" "),_("ul",[_("li",[v._v("鼠标事件对象 "),_("code",[v._v("mouseEvent")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("clientX/clientY")]),v._v(":鼠标触发点距离当前窗口左上角的距离")]),v._v(" "),_("li",[_("code",[v._v("pageX/pageY")]),v._v(":鼠标出发点距离BODY左上角的距离")]),v._v(" "),_("li",[_("code",[v._v("type")]),v._v(" 事件类型")]),v._v(" "),_("li",[_("code",[v._v("path")]),v._v(":事件传播路径")]),v._v(" "),_("li",[_("code",[v._v("target/srcElement")]),v._v(" 获取事件源")]),v._v(" "),_("li",[_("code",[v._v("ev.preventDefault()/ev.returnValue=false")]),v._v(" 阻止默认行为")]),v._v(" "),_("li",[_("code",[v._v("ev.stopPropagation()/ev.cancelBubble=true")]),v._v(" 阻止冒泡")])])]),v._v(" "),_("li",[v._v("键盘事件对象 "),_("code",[v._v("keyBoardEvent")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("which/code")]),v._v(" 获取按键的键值码\n"),_("ul",[_("li",[v._v("方向键 左上右下=>37,18,39,40")]),v._v(" "),_("li",[_("code",[v._v("Alt")]),v._v(" 18\n...")])])]),v._v(" "),_("li",[_("code",[v._v("altKey")]),v._v(" 是否按下"),_("code",[v._v("alt")]),v._v("键")]),v._v(" "),_("li",[_("code",[v._v("ctrlKey")]),v._v(" 是否按下"),_("code",[v._v("ctrl")]),v._v("键")]),v._v(" "),_("li",[_("code",[v._v("shiftKey")]),v._v(" 是否按下"),_("code",[v._v("shift")]),v._v("键")])])]),v._v(" "),_("li",[v._v("手指事件对象(移动端) "),_("code",[v._v("TouchEvent")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("changeTouches")]),v._v(" 存放的是一个数组 "),_("code",[v._v("TouchList")]),v._v("。")])])])]),v._v(" "),_("h4",{attrs:{id:"_5、事件传播机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、事件传播机制"}},[v._v("#")]),v._v(" 5、事件传播机制")]),v._v(" "),_("p",[_("strong",[v._v("事件捕获阶段")]),v._v("=>"),_("strong",[v._v("目标阶段")]),v._v("=>"),_("strong",[v._v("冒泡阶段")]),v._v("\n事件委托：利用事件的冒泡机制,把子元素上的事件行为触发要做的操作委托给它的祖先元素，让其去执行相应的操作，可以在方法执行的时候，基于不同的事件源做不同的处理。事件委托可以提高性能。(减少堆内存的开辟,每一个元素的操作(回调函数)都会开辟一个堆内存空间)")]),v._v(" "),_("h4",{attrs:{id:"_6、mouseover和mouseenter的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、mouseover和mouseenter的区别"}},[v._v("#")]),v._v(" 6、mouseover和mouseenter的区别")]),v._v(" "),_("p",[v._v("**"),_("code",[v._v("mouseover")]),v._v("和"),_("code",[v._v("mouseout")]),v._v("**存在事件的冒泡传播机制")]),v._v(" "),_("ul",[_("li",[v._v('从父元素"进入"到子元素：'),_("strong",[v._v("属于划出父元素")]),v._v("，划入子元素。")]),v._v(" "),_("li",[v._v('从子元素"划入"到父元素：属于"划出"子元素,"划入"父元素。')]),v._v(" "),_("li",[v._v("它"),_("strong",[v._v("忽略")]),v._v("层级关系，一切按照鼠标在谁上面来决定"),_("code",[v._v("over/out")]),v._v("\n**"),_("code",[v._v("mouseenter")]),v._v("和"),_("code",[v._v("mouseleave")]),v._v('**默认"阻止了事件的冒泡传播机制"')]),v._v(" "),_("li",[v._v('从父元素"进入"子元素：属于"进入子元素",但是没有离开父元素，所以父元素'),_("code",[v._v("leave")]),v._v("事件不会触发。")]),v._v(" "),_("li",[v._v('从子元素"进入"父元素:属于"离开"子元素，但是一直处于父元素中,所以也不算重新进入父元素，父元素的'),_("code",[v._v("enter")]),v._v("事件也不会触发。")])])])}),[],!1,null,null,null);_.default=t.exports}}]);